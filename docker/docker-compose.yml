version: '3.8'

services:
  api:
    build:
      context: ..
      dockerfile: docker/Dockerfile.api
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_SERVER=db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=ragchatbot
      - POSTGRES_PORT=5432
      - REDIS_HOST=redis
      - QDRANT_HOST=qdrant
      - LLM_API_KEY=LLM_API_KEY
      - SECRET_KEY=SECRET_KEY
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
      qdrant:
        condition: service_started
      worker:
        condition: service_started

  worker:
    build:
      context: ..
      dockerfile: docker/Dockerfile.worker
    command: celery -A app.worker.main worker -Q document_processing,vector_store --loglevel=info
    environment:
      - POSTGRES_SERVER=db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=ragchatbot
      - POSTGRES_PORT=5432
      - REDIS_HOST=redis
      - QDRANT_HOST=qdrant
      - LLM_API_KEY=LLM_API_KEY
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
      qdrant:
        condition: service_started

  celery-beat:
    build:
      context: ..
      dockerfile: docker/Dockerfile.worker
    command: celery -A app.worker.main beat --loglevel=info
    environment:
      - REDIS_HOST=redis
    depends_on:
      - redis
      - worker

  db:
    image: postgres:13
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=ragchatbot
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6
    ports:
      - "6379:6379"

  qdrant:
    image: qdrant/qdrant
    ports:
      - "6333:6333"
    volumes:
      - qdrant_data:/qdrant/storage

volumes:
  postgres_data:
  qdrant_data: 
